{"name":"Check drupal","tagline":"Nagios drupal plugin to monitor the state of a drupal site for security updates, core errors and more","body":"# check_drupal\r\nNagios drupal plugin to monitor the state of a drupal site for security updates, system updates, core errors, core warnings and missing db updates.\r\n\r\n[![Build Status](https://travis-ci.org/cytopia/check_drupal.svg?branch=master)](https://travis-ci.org/cytopia/check_drupal)\r\n [![Latest Stable Version](https://poser.pugx.org/cytopia/check_drupal/v/stable)](https://packagist.org/packages/cytopia/check_drupal) [![Total Downloads](https://poser.pugx.org/cytopia/check_drupal/downloads)](https://packagist.org/packages/cytopia/check_drupal) [![Latest Unstable Version](https://poser.pugx.org/cytopia/check_drupal/v/unstable)](https://packagist.org/packages/cytopia/check_drupal) [![License](https://poser.pugx.org/cytopia/check_drupal/license)](http://opensource.org/licenses/MIT)\r\n [![POSIX](https://img.shields.io/badge/posix-100%25-brightgreen.svg)](https://en.wikipedia.org/?title=POSIX)\r\n [![Type](https://img.shields.io/badge/type-%2Fbin%2Fsh-red.svg)](https://en.wikipedia.org/?title=Bourne_shell)\r\n\r\n##### NOTE\r\nThis check can be used in two ways:\r\n\r\n1. Let nagios always trigger `check_drupal` which might take 1-3 seconds and cause some load\r\n2. Let nagios simply parse the logfile (with `check_drupal_log`) created by `check_drupal` via cron on the target machine.\r\n\r\nI would recommend the second option as you do not check each drupal site every 5 minutes and also in order to keep the nagios check as fast as possible. For that use cron to trigger the `check_drupal` on the target machine every 6 hours or so.\r\n\r\n\r\n##### Requirements\r\n| Program  | Required | Description |\r\n| ------------- | ------------- | -------- |\r\n| bourne shell (sh)  | yes  | The whole script is written in pure bourne shell (sh) and is 100% Posix compliant |\r\n| [check_by_ssh](https://www.monitoring-plugins.org/doc/man/check_by_ssh.html)  | yes  | This nagios plugin is used as a wrapper to check on remote hosts |\r\n| [drush](http://www.drush.org) | yes  | This nagios plugin requires drush to be installed on the target machine |\r\n\r\n##### Features\r\n* Check for Drupal security updates\r\n* Check for Drupal system updates\r\n* Check for Drupal required database updates\r\n* Check for Drupal core errors\r\n* Check for Drupal core warnings\r\n* Every check can specify its own nagios severity (Error or Warning)\r\n* Custom name for nagios short output\r\n* Detailed information in nagios long output\r\n* Be able to successfully recognize valid Drupal6 or Drupal7 document root\r\n* Basic performance data fow: how many OKs, Errors, Warnings and Unknowns\r\n\r\n\r\n\r\n## 1. Usage\r\n\r\n### 1.1 `check_drupal`\r\n\r\nWith `-l` you will be able to run the `check_drupal` locally on each machine only a few times a day and dump the output to a logfile.\r\nThis file can then be checked normaly via nagios by calling `check_drupal_log` instead, which will just read the log and not put any load onto the machine.\r\nMultiple logfiles for multiple drupal site per server will be possible.\r\n\r\n```shell\r\nUsage: check_drupal -d <drupal root> [-n <name>] [-s <w|e>] [-u <w|e>] [-e <w|e>] [-w <w|e>] [-m <w|e>] [-l <log file>]\r\nOR     check_drupal --check\r\nOR     check_drupal --help\r\nOR     check_drupal --version\r\n\r\nNagios plugin that will check drupal sites for errors.\r\nErrors include the following: available security updates,\r\nmissed database updates and drupal status errors.\r\nFor each check you can specify the nagios severity (error or warning).\r\n\r\n  -d <drupal root>       The full path to the drupal document root (usually\r\n                         the 'drupal' folder. This parameter is required.\r\n\r\n  -n <name>              [optional] Specify a name for the drupal instance to\r\n                         appear on the nagios output. The default is 'Drupal'\r\n\r\n                         the 'drupal' folder. This parameter is required.\r\n\r\n  -s <w|e>               [optional] Check for drupal core and module security\r\n                         updates and return nagios error or warning.\r\n                         Warning:  -s w\r\n                         Error:    -s e\r\n\r\n  -u <w|e>               [optional] Check for drupal core and module updates\r\n                         in general and return nagios error or warning.\r\n                         Warning:  -u w\r\n                         Error:    -u e\r\n\r\n  -e <w|e>               [optional] Check for drupal status errors and return\r\n                         nagios error or warning.\r\n                         Warning:  -e w\r\n                         Error:    -e e\r\n\r\n  -w <w|e>               [optional] Check for drupal status warnings and return\r\n                         nagios error or warning.\r\n                         Warning:  -w w\r\n                         Error:    -w e\r\n\r\n  -m <w|e>               [optional] Check for drupal missed database updates\r\n                         and return nagios error or warning. (They can occur\r\n                         when you update core or modules and forget the db).\r\n                         Warning:  -m w\r\n                         Error:    -m e\r\n\r\n  -l <log file>          [optional] Instead of checking all of the above via nagios\r\n                         every five minutes or so, run this script via cron once a day\r\n                         (or twice) and write the output into a logfile. This logfile can\r\n                         then be checked by the nagios plugin 'check_drupal_log' which is\r\n                         less costy in terms of load/cpu.\r\n                         See 'check_drupal_log --help' for more info.\r\n                         Example:\r\n                         check_drupal -d /var/www -s e -e e -w w -l /var/log/drupal.log\r\n                         check_drupal_log -l /var/log/drupal.log\r\n\r\n  --check                Check for program requirements.\r\n  --help                 Show this help\r\n  --version              Show version information.\r\n```\r\n\r\n### 1.2 `check_drupal_log`\r\n\r\n```bash\r\nUsage: check_drupal_log -f <logfile>\r\nOR     check_drupal_log --help\r\nOR     check_drupal_log --version\r\n\r\nNagios plugin that will parse the logfile created by 'check_drupal'.\r\n\r\n  -f <logfile>           The full path to logfile created by 'check_drupal'\r\n\r\n  --help                 Show this help\r\n  --version              Show version information.\r\n```\r\n\r\n## 2. Examples\r\n\r\nThe following examples are run directly from the command line. The exit code will always be aggregated, meaning if the program throws a warning and an error, the final exit code will result in an error.\r\n\r\nAlso to note: The first line until the `|` represents the actual nagios output. Everything in the first line behind the `|` is performance data used to generate the cool charts. Everything from line two onwards is nagios extended status info (when you click on details).\r\n\r\n**Check for security updates**\r\n```bash\r\n./check_drupal -d /shared/httpd/sites-drupal/COOL-PROJECT/drupal/ -n COOL-PROJECT -s e\r\n[ERROR] COOL-PROJECT has errors: Security update(s) | 'OK'=0;;;0;1 'Errors'=1;1;1;0;1 'Warnings'=0;1;;0;1 'Unknown'=0;;;0;1\r\n==== SECURITY UPDATES ====\r\n[CRITICAL] drupal 7.40 -> 7.41\r\n[CRITICAL] jquery_update 7.x-2.6 -> 7.x-2.7\r\n```\r\n\r\n**Check for security and normal updates**\r\n```bash\r\n./check_drupal -d /shared/httpd/sites-drupal/COOL-PROJECT/drupal/ -n COOL-PROJECT -s e -u w\r\n[ERROR] COOL-PROJECT has errors: Security update(s), Update(s) | 'OK'=0;;;0;2 'Errors'=1;1;1;0;2 'Warnings'=1;1;;0;2 'Unknown'=0;;;0;2\r\n==== SECURITY UPDATES ====\r\n[CRITICAL] drupal 7.40 -> 7.41\r\n[CRITICAL] jquery_update 7.x-2.6 -> 7.x-2.7\r\n==== SYSTEM UPDATES ====\r\n[WARNING] field_collection 7.x-1.0-beta9 -> 7.x-1.0-beta10\r\n[WARNING] views 7.x-3.11 -> 7.x-3.13\r\n[WARNING] bootstrap 7.x-3.0 -> 7.x-3.1\r\n```\r\n\r\n**Check for all possible stuff**\r\n```bash\r\n./check_drupal -d /shared/httpd/sites-drupal/COOL-PROJECT/drupal/ -n COOL-PROJECT -s e -u w -e e -w w -m e\r\n[ERROR] COOL-PROJECT has errors: Security update(s), Update(s), Core error(s), Core warning(s) | 'OK'=1;;;0;5 'Errors'=2;1;1;0;5 'Warnings'=2;1;;0;5 'Unknown'=0;;;0;5\r\n==== SECURITY UPDATES ====\r\n[CRITICAL] drupal 7.40 -> 7.41\r\n[CRITICAL] jquery_update 7.x-2.6 -> 7.x-2.7\r\n==== SYSTEM UPDATES ====\r\n[WARNING] field_collection 7.x-1.0-beta9 -> 7.x-1.0-beta10\r\n[WARNING] views 7.x-3.11 -> 7.x-3.13\r\n[WARNING] bootstrap 7.x-3.0 -> 7.x-3.1\r\n==== CORE ERRORS ====\r\n[CRITICAL] CKeditor\r\n[CRITICAL] Cron-Wartungsaufgaben\r\n[CRITICAL] CTools CSS Cache\r\n[CRITICAL] Aktualisierungsstatus von Modulen und Themes\r\n[CRITICAL] Aktualisierungsstatus des Drupal-Kern\r\n==== CORE WARNINGS ====\r\n[WARNING] Token\r\n==== DB UPDATES ====\r\n[OK] No database updates required\r\n```\r\n**Check for db updates**\r\n```bash\r\n./check_drupal -d /shared/httpd/sites-drupal/COOL-PROJECT/drupal/ -n COOL-PROJECT -m e\r\n[OK] COOL-PROJECT is healthy | 'OK'=1;;;0;1 'Errors'=0;1;1;0;1 'Warnings'=0;1;;0;1 'Unknown'=0;;;0;1\r\n==== DB UPDATES ====\r\n[OK] No database updates required\r\n```\r\n\r\n## 3. Nagios Configuration\r\n\r\n### 3.1 check_drupal\r\n\r\n#### Command definition\r\nIn order to check drupal sites on remote servers you will need to make use of `check_by_ssh`.\r\n```bash\r\nname:    check_by_ssh_drupal\r\ncommand: $USER1$/check_by_ssh -H $HOSTADDRESS$ -t 60 -l \"$USER17$\" -C \"$USER22$/check_drupal -d $ARG1$ -n $ARG2$ $ARG3$\"\r\n```\r\n#### Service definition\r\nIn the above command definition there are two fixed arguments for the document root and the project name as well as one loose argument place holder that can hold all checks you want to run. The following shows one example service definition for one specific drupal site:\r\n```bash\r\ncheck command: ssh_drupal_cool-drupal-project\r\n$ARG1$:        /var/www/cool-drupal-project/drupal/\r\n$ARG2$:        Cool Drupal Project\r\n$ARG3$:        -s e -u w -e e -w w -m e\r\n```\r\nThe above service defintion will check against security updates (with nagios error), against normal updates (with nagios warning), against core errors (with nagios error), against core warnings (with nagios warning) and finally against missed database updates (with nagios error).\r\n\r\n### 3.2 check_drupal_log\r\n\r\n#### Command definition\r\nIn order to check drupal sites on remote servers you will need to make use of `check_by_ssh`.\r\n```bash\r\nname:    check_by_ssh_drupal\r\ncommand: $USER1$/check_by_ssh -H $HOSTADDRESS$ -t 60 -l \"$USER17$\" -C \"$USER22$/check_drupal_log -f $ARG1$\"\r\n```\r\n#### Service definition\r\nIn the above command definition there is only one arguments. This will point to the logfile created by `check_drupal`:\r\n```bash\r\ncheck command: ssh_drupal_cool-drupal-project\r\n$ARG1$:        /var/log/drupal_cool-project.log\r\n```\r\n\r\n#### Cron setup\r\nFor this recommended setup to work you need to setup a cronjob on the target machine (where the drupal site is installed) that is run every 6 hours, every day or whatever you want.\r\n\r\nSetup multiple cronjobs with multiple logfiles if you have multiple drupal sites on this machine that you want to monitor.\r\n\r\n```cron\r\n0 */6 * * * /path/to/check_drupal -d /var/www/cool-drupal-project/drupal/ -n \"Cool Project\" -s e -u w -e e -w w -m e -l /var/log/drupal_cool-project.log\r\n```\r\n\r\n\r\n\r\n\r\n## 4. License\r\n[![license](https://poser.pugx.org/cytopia/check_drupal/license)](http://opensource.org/licenses/mit)\r\n\r\n## 5. Awesome\r\n\r\nAdded by the following [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome) lists:\r\n\r\n* [awesome-nagios-plugins](https://github.com/cytopia/awesome-nagios-plugins)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}